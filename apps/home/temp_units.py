# -*- coding: utf-8 -*-
"""temp-units.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FIKV5ErYeyY3L4KYICbMHpmIfU8WIgEs
"""

import tensorflow as tf
import os
import numpy as np
import pandas as pd

df=pd.read_csv("temp_no.of_units.csv")

df

def convert(a):
    a = str(a)  # cast to string
    b = a[5:7]+"."+a[8:10] # last four characters
    return float(b)

df['Date'] = df['Date'].apply(convert)

X = df[['Date','Temperature']].values
y = df['No_of_units_generated(kWh)'].values

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33,shuffle=False,random_state=None)
pq=y_test
qp=X_test

from keras.models import Sequential
from keras.layers import Dense, SimpleRNN
from keras.callbacks import EarlyStopping

model=Sequential()
model.add(SimpleRNN(units=32, activation="relu"))
model.add(Dense(8, activation='relu'))
model.add(Dense(1))
model.compile(loss='mean_squared_error',  optimizer='adam',metrics = ['mse', 'mae'])

X_train = X_train.reshape(-1, 1, 2)
X_test  = X_test.reshape(-1, 1, 2)
y_train = y_train.reshape(-1, 1, 1)
y_test = y_test.reshape(-1, 1, 1)

import tensorflow as tf
tf.config.run_functions_eagerly(True)

model.fit(x=X_train, y=y_train, epochs=100,validation_data=(X_test,y_test),shuffle=False)

model_losses = pd.DataFrame(model.history.history)
model_losses.plot()

predictions = model.predict(X_test)
sample = pd.DataFrame(predictions,columns=['Predict'])
sample['Actual']=pq
sample[['Date','Temperature']]=qp
sample.head(3)

model.save("temp")

import keras
from keras.models import load_model
model_final = load_model("temp")

